{"version":3,"file":"material-extended-mde.umd.js.map","sources":["ng://@material-extended/mde/lib/popover/popover-errors.ts","ng://@material-extended/mde/lib/popover/popover-animations.ts","ng://@material-extended/mde/lib/popover/popover.ts","ng://@material-extended/mde/lib/popover/popover-trigger.ts","ng://@material-extended/mde/lib/popover/popover-target.ts","ng://@material-extended/mde/lib/popover/popover-module.ts"],"sourcesContent":["/**\r\n * Throws an exception for the case when popover trigger doesn't have a valid mde-popover instance\r\n */\r\nexport function throwMdePopoverMissingError() {\r\n  throw Error(`mde-popover-trigger: must pass in an mde-popover instance.\r\n\r\n    Example:\r\n      <mde-popover #popover=\"mdePopover\"></mde-popover>\r\n      <button [mdePopoverTriggerFor]=\"popover\"></button>`);\r\n}\r\n\r\n/**\r\n * Throws an exception for the case when popover's mdePopoverPositionX value isn't valid.\r\n * In other words, it doesn't match 'before' or 'after'.\r\n */\r\nexport function throwMdePopoverInvalidPositionX() {\r\n  throw Error(`mdePopoverPositionX value must be either 'before' or after'.\r\n      Example: <mde-popover mdePopoverPositionX=\"before\" #popover=\"mdePopover\"></mde-popover>`);\r\n}\r\n\r\n/**\r\n * Throws an exception for the case when popover's mdePopoverPositionY value isn't valid.\r\n * In other words, it doesn't match 'above' or 'below'.\r\n */\r\nexport function throwMdePopoverInvalidPositionY() {\r\n  throw Error(`mdePopoverPositionY value must be either 'above' or below'.\r\n      Example: <mde-popover mdePopoverPositionY=\"above\" #popover=\"mdePopover\"></mde-popover>`);\r\n}\r\n","import {\r\n  trigger,\r\n  state,\r\n  style,\r\n  animate,\r\n  transition,\r\n  AnimationTriggerMetadata,\r\n} from '@angular/animations';\r\n\r\n/**\r\n * Below are all the animations for the md-popover component.\r\n * Animation duration and timing values are based on AngularJS Material.\r\n */\r\n\r\n/**\r\n * This animation controls the popover panel's entry and exit from the page.\r\n *\r\n * When the popover panel is added to the DOM, it scales in and fades in its border.\r\n *\r\n * When the popover panel is removed from the DOM, it simply fades out after a brief\r\n * delay to display the ripple.\r\n */\r\n\r\nexport const transformPopover: AnimationTriggerMetadata = trigger('transformPopover', [\r\n  state('enter', style({\r\n    opacity: 1,\r\n    transform: `scale(1)`\r\n  })),\r\n  transition('void => *', [\r\n    style({\r\n      opacity: 0,\r\n      transform: `scale(0)`\r\n    }),\r\n    animate(`200ms cubic-bezier(0.25, 0.8, 0.25, 1)`)\r\n  ]),\r\n  transition('* => void', [\r\n    animate('50ms 100ms linear', style({opacity: 0}))\r\n  ])\r\n]);\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  Output,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n  ElementRef,\r\n  ChangeDetectionStrategy,\r\n  HostBinding,\r\n} from '@angular/core';\r\n\r\nimport { ESCAPE } from '@angular/cdk/keycodes';\r\n\r\nimport { MdePopoverPositionX, MdePopoverPositionY, MdePopoverTriggerEvent } from './popover-types';\r\nimport { throwMdePopoverInvalidPositionX, throwMdePopoverInvalidPositionY } from './popover-errors';\r\nimport { MdePopoverPanel } from './popover-interfaces';\r\nimport { transformPopover } from './popover-animations';\r\n\r\nimport { AnimationEvent } from '@angular/animations';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'mde-popover',\r\n  template: `<ng-template>\r\n  <div class=\"mde-popover-panel\" role=\"dialog\" [class.mde-popover-overlap]=\"overlapTrigger\"\r\n       [ngClass]=\"_classList\" [ngStyle]=\"popoverPanelStyles\" (keydown)=\"_handleKeydown($event)\"\r\n       (click)=\"onClick()\" (mouseover)=\"onMouseOver()\" (mouseleave)=\"onMouseLeave()\"\r\n       [@transformPopover]=\"'enter'\">\r\n    <div class=\"mde-popover-direction-arrow\" [ngStyle]=\"popoverArrowStyles\" *ngIf=\"!overlapTrigger\"></div>\r\n    <div class=\"mde-popover-content\" [ngStyle]=\"popoverContentStyles\" cdkTrapFocus=\"focusTrapEnabled\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n`,\r\n  styles: [`.mde-popover-panel{display:flex;flex-direction:column;max-height:calc(100vh + 48px)}.mde-popover-ripple{position:absolute;top:0;left:0;bottom:0;right:0}.mde-popover-below .mde-popover-direction-arrow{position:absolute;bottom:0;width:0;height:0;border-bottom-width:0!important;z-index:99999}.mde-popover-above .mde-popover-direction-arrow{position:absolute;top:0;width:0;height:0;border-top-width:0!important;z-index:99999}.mde-popover-after .mde-popover-direction-arrow{left:20px}.mde-popover-before .mde-popover-direction-arrow{right:20px}`],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: [\r\n    transformPopover\r\n  ],\r\n  exportAs: 'mdePopover'\r\n})\r\nexport class MdePopover implements MdePopoverPanel, OnDestroy { // tslint:disable-line:component-class-suffix\r\n\r\n  @HostBinding('attr.role') role = 'dialog';\r\n\r\n  /** Settings for popover, view setters and getters for more detail */\r\n  private _positionX: MdePopoverPositionX = 'after';\r\n  private _positionY: MdePopoverPositionY = 'below';\r\n  private _triggerEvent: MdePopoverTriggerEvent = 'hover';\r\n  private _enterDelay = 200;\r\n  private _leaveDelay = 200;\r\n  private _overlapTrigger = true;\r\n  private _targetOffsetX = 0;\r\n  private _targetOffsetY = 0;\r\n  private _arrowOffsetX = 20;\r\n  private _arrowWidth = 8;\r\n  private _arrowColor = 'rgba(0, 0, 0, 0.12)';\r\n  private _closeOnClick = true;\r\n  private _focusTrapEnabled = true;\r\n\r\n  /** Config object to be passed into the popover's ngClass */\r\n  _classList: {[key: string]: boolean} = {};\r\n\r\n  // TODO: Write comment description\r\n  /** */\r\n  public containerPositioning = false;\r\n\r\n  /** Closing disabled on popover */\r\n  public closeDisabled = false;\r\n\r\n  /** Config object to be passed into the popover's arrow ngStyle */\r\n  public popoverPanelStyles: {};\r\n\r\n  /** Config object to be passed into the popover's arrow ngStyle */\r\n  public popoverArrowStyles: {};\r\n\r\n  /** Config object to be passed into the popover's content ngStyle */\r\n  public popoverContentStyles: {};\r\n\r\n  /** Emits the current animation state whenever it changes. */\r\n  _onAnimationStateChange = new EventEmitter<AnimationEvent>();\r\n\r\n\r\n  /** Position of the popover in the X axis. */\r\n  @Input('mdePopoverPositionX')\r\n  get positionX() { return this._positionX; }\r\n  set positionX(value: MdePopoverPositionX) {\r\n    if (value !== 'before' && value !== 'after') {\r\n      throwMdePopoverInvalidPositionX();\r\n    }\r\n    this._positionX = value;\r\n    this.setPositionClasses();\r\n  }\r\n\r\n  /** Position of the popover in the Y axis. */\r\n  @Input('mdePopoverPositionY')\r\n  get positionY() { return this._positionY; }\r\n  set positionY(value: MdePopoverPositionY) {\r\n    if (value !== 'above' && value !== 'below') {\r\n      throwMdePopoverInvalidPositionY();\r\n    }\r\n    this._positionY = value;\r\n    this.setPositionClasses();\r\n  }\r\n\r\n  /** Popover trigger event */\r\n  @Input('mdePopoverTriggerOn')\r\n  get triggerEvent(): MdePopoverTriggerEvent { return this._triggerEvent; }\r\n  set triggerEvent(v: MdePopoverTriggerEvent) { this._triggerEvent = v; }\r\n\r\n  /** Popover enter delay */\r\n  @Input('mdePopoverEnterDelay')\r\n  get enterDelay(): number { return this._enterDelay; }\r\n  set enterDelay(v: number) { this._enterDelay = v; }\r\n\r\n  /** Popover leave delay */\r\n  @Input('mdePopoverLeaveDelay')\r\n  get leaveDelay(): number { return this._leaveDelay; }\r\n  set leaveDelay(v: number) { this._leaveDelay = v; }\r\n\r\n  /** Popover overlap trigger */\r\n  @Input('mdePopoverOverlapTrigger')\r\n  get overlapTrigger(): boolean { return this._overlapTrigger; }\r\n  set overlapTrigger(v: boolean) { this._overlapTrigger = v; }\r\n\r\n  /** Popover target offset x */\r\n  @Input('mdePopoverOffsetX')\r\n  get targetOffsetX(): number { return this._targetOffsetX; }\r\n  set targetOffsetX(v: number) { this._targetOffsetX = v; }\r\n\r\n  /** Popover target offset y */\r\n  @Input('mdePopoverOffsetY')\r\n  get targetOffsetY(): number { return this._targetOffsetY; }\r\n  set targetOffsetY(v: number) { this._targetOffsetY = v; }\r\n\r\n  /** Popover arrow offset x */\r\n  @Input('mdePopoverArrowOffsetX')\r\n  get arrowOffsetX(): number { return this._arrowOffsetX; }\r\n  set arrowOffsetX(v: number) { this._arrowOffsetX = v; }\r\n\r\n  /** Popover arrow width */\r\n  @Input('mdePopoverArrowWidth')\r\n  get arrowWidth(): number { return this._arrowWidth; }\r\n  set arrowWidth(v: number) { this._arrowWidth = v; }\r\n\r\n  /** Popover arrow color */\r\n  @Input('mdePopoverArrowColor')\r\n  get arrowColor(): string { return this._arrowColor; }\r\n  set arrowColor(v: string) { this._arrowColor = v; }\r\n\r\n  /**\r\n   * Popover container close on click\r\n   * default: true\r\n   */\r\n  @Input('mdePopoverCloseOnClick')\r\n  get closeOnClick(): boolean { return this._closeOnClick; }\r\n  set closeOnClick(v: boolean) { this._closeOnClick = v; }\r\n\r\n\r\n  /**\r\n   * Popover focus trap using cdkTrapFocus\r\n   * default: true\r\n   */\r\n  @Input('mdeFocusTrapEnabled')\r\n  get focusTrapEnabled(): boolean { return this._focusTrapEnabled; }\r\n  set focusTrapEnabled(v: boolean) { this._focusTrapEnabled = v; }\r\n\r\n\r\n  /**\r\n   * This method takes classes set on the host md-popover element and applies them on the\r\n   * popover template that displays in the overlay container.  Otherwise, it's difficult\r\n   * to style the containing popover from outside the component.\r\n   * @param classes list of class names\r\n   */\r\n  @Input('class')\r\n  set panelClass(classes: string) {\r\n    if (classes && classes.length) {\r\n      this._classList = classes.split(' ').reduce((obj: any, className: string) => {\r\n        obj[className] = true;\r\n        return obj;\r\n      }, {});\r\n\r\n      this._elementRef.nativeElement.className = '';\r\n      this.setPositionClasses();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method takes classes set on the host md-popover element and applies them on the\r\n   * popover template that displays in the overlay container.  Otherwise, it's difficult\r\n   * to style the containing popover from outside the component.\r\n   * @deprecated Use `panelClass` instead.\r\n   */\r\n  @Input()\r\n  get classList(): string { return this.panelClass; }\r\n  set classList(classes: string) { this.panelClass = classes; }\r\n\r\n  /** Event emitted when the popover is closed. */\r\n  @Output() close = new EventEmitter<void>();\r\n\r\n  @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\r\n\r\n  constructor(private _elementRef: ElementRef) {\r\n    this.setPositionClasses();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._emitCloseEvent();\r\n    this.close.complete();\r\n  }\r\n\r\n\r\n  /** Handle a keyboard event from the popover, delegating to the appropriate action. */\r\n  _handleKeydown(event: KeyboardEvent) {\r\n    switch (event.keyCode) {\r\n      case ESCAPE:\r\n        this._emitCloseEvent();\r\n        return;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This emits a close event to which the trigger is subscribed. When emitted, the\r\n   * trigger will close the popover.\r\n   */\r\n  _emitCloseEvent(): void {\r\n    this.close.emit();\r\n  }\r\n\r\n  /** Close popover on click if closeOnClick is true */\r\n  onClick() {\r\n    if (this.closeOnClick) {\r\n      this._emitCloseEvent();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * TODO: Refactor when @angular/cdk includes feature I mentioned on github see link below.\r\n   * https://github.com/angular/material2/pull/5493#issuecomment-313085323\r\n   */\r\n  /** Disables close of popover when leaving trigger element and mouse over the popover */\r\n  onMouseOver() {\r\n    if (this.triggerEvent === 'hover') {\r\n      this.closeDisabled = true;\r\n    }\r\n  }\r\n  /** Enables close of popover when mouse leaving popover element */\r\n  onMouseLeave() {\r\n    if (this.triggerEvent === 'hover') {\r\n      this.closeDisabled = false;\r\n      this._emitCloseEvent();\r\n    }\r\n  }\r\n\r\n  // TODO: Refactor how styles are set and updated on the component, use best practices.\r\n  // TODO: If arrow left and right positioning is requested, see if flex direction can be used to work with order.\r\n  /** Sets the current styles for the popover to allow for dynamically changing settings */\r\n  setCurrentStyles() {\r\n\r\n    // TODO: See if arrow position can be calculated automatically and allow override.\r\n    // TODO: See if flex order is a better alternative to position arrow top or bottom.\r\n    this.popoverArrowStyles = {\r\n      'right': this.positionX === 'before' ? (this.arrowOffsetX - this.arrowWidth) + 'px' : '',\r\n      'left': this.positionX === 'after' ? (this.arrowOffsetX - this.arrowWidth) + 'px' : '',\r\n      'border-top': this.positionY === 'below' ?\r\n        this.arrowWidth + 'px solid ' + this.arrowColor : '0px solid transparent',\r\n      'border-right': 'undefined' === undefined ?\r\n        this.arrowWidth + 'px solid ' + this.arrowColor :\r\n        this.arrowWidth + 'px solid transparent',\r\n      'border-bottom': this.positionY === 'above' ?\r\n        this.arrowWidth + 'px solid ' + this.arrowColor :\r\n        this.arrowWidth + 'px solid transparent',\r\n      'border-left': 'undefined' === undefined ?\r\n        this.arrowWidth + 'px solid ' + this.arrowColor :\r\n        this.arrowWidth + 'px solid transparent',\r\n    };\r\n\r\n    // TODO: Remove if flex order is added.\r\n    this.popoverContentStyles = {\r\n      'padding-top': this.overlapTrigger === true ? '0px' : this.arrowWidth + 'px',\r\n      'padding-bottom': this.overlapTrigger === true ? '0px' : (this.arrowWidth) + 'px',\r\n      'margin-top': this.overlapTrigger === false && this.positionY === 'below' && this.containerPositioning === false ?\r\n        -(this.arrowWidth * 2) + 'px' : '0px'\r\n    };\r\n  }\r\n\r\n  /**\r\n   * It's necessary to set position-based classes to ensure the popover panel animation\r\n   * folds out from the correct direction.\r\n   */\r\n  setPositionClasses(posX = this.positionX, posY = this.positionY): void {\r\n    this._classList['mde-popover-before'] = posX === 'before';\r\n    this._classList['mde-popover-after'] = posX === 'after';\r\n    this._classList['mde-popover-above'] = posY === 'above';\r\n    this._classList['mde-popover-below'] = posY === 'below';\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  Optional,\r\n  Output,\r\n  ViewContainerRef,\r\n  HostListener,\r\n  HostBinding,\r\n} from '@angular/core';\r\n\r\n\r\nimport { isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\r\nimport { Direction, Directionality } from '@angular/cdk/bidi';\r\nimport {\r\n  ConnectedPositionStrategy,\r\n  Overlay,\r\n  OverlayRef,\r\n  OverlayConfig,\r\n  HorizontalConnectionPos,\r\n  VerticalConnectionPos,\r\n  FlexibleConnectedPositionStrategy\r\n} from '@angular/cdk/overlay';\r\nimport { TemplatePortal } from '@angular/cdk/portal';\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { MdePopoverPanel, MdeTarget } from './popover-interfaces';\r\nimport { MdePopoverPositionX, MdePopoverPositionY, MdePopoverTriggerEvent } from './popover-types';\r\nimport { throwMdePopoverMissingError } from './popover-errors';\r\n\r\n\r\n\r\n/**\r\n * This directive is intended to be used in conjunction with an mde-popover tag. It is\r\n * responsible for toggling the display of the provided popover instance.\r\n */\r\n\r\n@Directive({\r\n  selector: '[mdePopoverTriggerFor]',\r\n  exportAs: 'mdePopoverTrigger'\r\n})\r\nexport class MdePopoverTrigger implements AfterViewInit, OnDestroy { // tslint:disable-line:directive-class-suffix\r\n\r\n    @HostBinding('attr.aria-haspopup') ariaHaspopup = true;\r\n\r\n    private _portal: TemplatePortal<any>;\r\n    private _overlayRef: OverlayRef | null = null;\r\n    private _popoverOpen = false;\r\n    private _halt = false;\r\n    private _backdropSubscription: Subscription;\r\n    private _positionSubscription: Subscription;\r\n\r\n    private _mouseoverTimer: any;\r\n\r\n    // tracking input type is necessary so it's possible to only auto-focus\r\n    // the first item of the list when the popover is opened via the keyboard\r\n    private _openedByMouse = false;\r\n\r\n    /** References the popover instance that the trigger is associated with. */\r\n    @Input('mdePopoverTriggerFor') popover: MdePopoverPanel;\r\n\r\n    /** References the popover target instance that the trigger is associated with. */\r\n    @Input('mdePopoverTargetAt') targetElement: MdeTarget;\r\n\r\n    /** Position of the popover in the X axis */\r\n    @Input('mdePopoverPositionX') positionX: MdePopoverPositionX;\r\n\r\n    /** Position of the popover in the Y axis */\r\n    @Input('mdePopoverPositionY') positionY: MdePopoverPositionY;\r\n\r\n    /** Popover trigger event */\r\n    @Input('mdePopoverTriggerOn') triggerEvent: MdePopoverTriggerEvent;\r\n\r\n    /** Popover delay */\r\n    @Input('mdePopoverEnterDelay') enterDelay: number;\r\n\r\n    /** Popover delay */\r\n    @Input('mdePopoverLeaveDelay') leaveDelay: number;\r\n\r\n    /** Popover overlap trigger */\r\n    @Input('mdePopoverOverlapTrigger') overlapTrigger: boolean;\r\n\r\n    /** Popover target offset x */\r\n    @Input('mdePopoverOffsetX') targetOffsetX: number;\r\n\r\n    /** Popover target offset y */\r\n    @Input('mdePopoverOffsetY') targetOffsetY: number;\r\n\r\n    /** Popover arrow offset x */\r\n    @Input('mdePopoverArrowOffsetX') arrowOffsetX: number;\r\n\r\n\r\n    /** Popover arrow width */\r\n    @Input('mdePopoverArrowWidth') arrowWidth: number;\r\n\r\n\r\n    /** Popover arrow color */\r\n    @Input('mdePopoverArrowColor') arrowColor: string;\r\n\r\n\r\n    /** Popover container close on click */\r\n    @Input('mdePopoverCloseOnClick') closeOnClick: boolean;\r\n\r\n\r\n    /** Event emitted when the associated popover is opened. */\r\n    @Output() opened = new EventEmitter<void>();\r\n\r\n    /** Event emitted when the associated popover is closed. */\r\n    @Output() closed = new EventEmitter<void>();\r\n\r\n\r\n    constructor(private _overlay: Overlay, public _elementRef: ElementRef,\r\n              private _viewContainerRef: ViewContainerRef,\r\n              @Optional() private _dir: Directionality) { }\r\n\r\n    ngAfterViewInit() {\r\n        this._checkPopover();\r\n        this._setCurrentConfig();\r\n        this.popover.close.subscribe(() => this.closePopover());\r\n    }\r\n\r\n    ngOnDestroy() { this.destroyPopover(); }\r\n\r\n\r\n    private _setCurrentConfig() {\r\n\r\n        if (this.positionX === 'before' || this.positionX === 'after') {\r\n          this.popover.positionX = this.positionX;\r\n        }\r\n\r\n        if (this.positionY === 'above' || this.positionY === 'below') {\r\n          this.popover.positionY = this.positionY;\r\n        }\r\n\r\n        if (this.triggerEvent) {\r\n            this.popover.triggerEvent = this.triggerEvent;\r\n        }\r\n\r\n        if (this.enterDelay) {\r\n          this.popover.enterDelay = this.enterDelay;\r\n        }\r\n\r\n        if (this.leaveDelay) {\r\n          this.popover.leaveDelay = this.leaveDelay;\r\n        }\r\n\r\n        if (this.overlapTrigger === true || this.overlapTrigger === false) {\r\n            this.popover.overlapTrigger = this.overlapTrigger;\r\n        }\r\n\r\n        if (this.targetOffsetX) {\r\n            this.popover.targetOffsetX = this.targetOffsetX;\r\n        }\r\n\r\n        if (this.targetOffsetY) {\r\n            this.popover.targetOffsetY = this.targetOffsetY;\r\n        }\r\n\r\n        if (this.arrowOffsetX) {\r\n            this.popover.arrowOffsetX = this.arrowOffsetX;\r\n        }\r\n\r\n        if (this.arrowWidth) {\r\n            this.popover.arrowWidth = this.arrowWidth;\r\n        }\r\n\r\n        if (this.arrowColor) {\r\n            this.popover.arrowColor = this.arrowColor;\r\n        }\r\n\r\n        if (this.closeOnClick === true || this.closeOnClick === false) {\r\n            this.popover.closeOnClick = this.closeOnClick;\r\n        }\r\n\r\n        this.popover.setCurrentStyles();\r\n    }\r\n\r\n\r\n    /** Whether the popover is open. */\r\n    get popoverOpen(): boolean { return this._popoverOpen; }\r\n\r\n    @HostListener('click') onClick() {\r\n      if (this.popover.triggerEvent === 'click') {\r\n          // this.popover.setCurrentStyles();\r\n          // this._setCurrentConfig();\r\n          this.togglePopover();\r\n      }\r\n    }\r\n\r\n    @HostListener('mouseenter') onMouseEnter() {\r\n      this._halt = false;\r\n      if (this.popover.triggerEvent === 'hover') {\r\n          this._mouseoverTimer = setTimeout(() => {\r\n              this.openPopover();\r\n          }, this.popover.enterDelay);\r\n      }\r\n    }\r\n\r\n    @HostListener('mouseleave') onMouseLeave() {\r\n      if (this.popover.triggerEvent === 'hover') {\r\n        if (this._mouseoverTimer) {\r\n            clearTimeout(this._mouseoverTimer);\r\n            this._mouseoverTimer = null;\r\n        }\r\n        if (this._popoverOpen) {\r\n            setTimeout(() => {\r\n                if (!this.popover.closeDisabled) {\r\n                    this.closePopover();\r\n                }\r\n            }, this.popover.leaveDelay);\r\n        } else {\r\n          this._halt = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    /** Toggles the popover between the open and closed states. */\r\n    togglePopover(): void {\r\n        return this._popoverOpen ? this.closePopover() : this.openPopover();\r\n    }\r\n\r\n    /** Opens the popover. */\r\n    openPopover(): void {\r\n        if (!this._popoverOpen && !this._halt) {\r\n            this._createOverlay().attach(this._portal);\r\n\r\n            /** Only subscribe to backdrop if trigger event is click */\r\n            if (this.triggerEvent === 'click') {\r\n              this._subscribeToBackdrop();\r\n            }\r\n\r\n            this._initPopover();\r\n        }\r\n    }\r\n\r\n    /** Closes the popover. */\r\n    closePopover(): void {\r\n        if (this._overlayRef) {\r\n          this._overlayRef.detach();\r\n\r\n          /** Only unsubscribe to backdrop if trigger event is click */\r\n          if (this.triggerEvent === 'click') {\r\n            this._backdropSubscription.unsubscribe();\r\n          }\r\n\r\n          this._resetPopover();\r\n        }\r\n    }\r\n\r\n    /** Removes the popover from the DOM. */\r\n    destroyPopover(): void {\r\n        if (this._overlayRef) {\r\n          this._overlayRef.dispose();\r\n          this._overlayRef = null;\r\n          this._cleanUpSubscriptions();\r\n        }\r\n    }\r\n\r\n    /** Focuses the popover trigger. */\r\n    focus() {\r\n        this._elementRef.nativeElement.focus();\r\n    }\r\n\r\n    /** The text direction of the containing app. */\r\n    get dir(): Direction {\r\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\r\n    }\r\n\r\n    /**\r\n    * This method ensures that the popover closes when the overlay backdrop is clicked.\r\n    * We do not use first() here because doing so would not catch clicks from within\r\n    * the popover, and it would fail to unsubscribe properly. Instead, we unsubscribe\r\n    * explicitly when the popover is closed or destroyed.\r\n    */\r\n    private _subscribeToBackdrop(): void {\r\n        if (this._overlayRef) {\r\n          this._backdropSubscription = this._overlayRef.backdropClick().subscribe(() => {\r\n            this.popover._emitCloseEvent();\r\n          });\r\n        }\r\n    }\r\n\r\n    /**\r\n    * This method sets the popover state to open and focuses the first item if\r\n    * the popover was opened via the keyboard.\r\n    */\r\n    private _initPopover(): void {\r\n        this._setIsPopoverOpen(true);\r\n    }\r\n\r\n    /**\r\n    * This method resets the popover when it's closed, most importantly restoring\r\n    * focus to the popover trigger if the popover was opened via the keyboard.\r\n    */\r\n    private _resetPopover(): void {\r\n        this._setIsPopoverOpen(false);\r\n\r\n        // Focus only needs to be reset to the host element if the popover was opened\r\n        // by the keyboard and manually shifted to the first popover item.\r\n        if (!this._openedByMouse) {\r\n          this.focus();\r\n        }\r\n        this._openedByMouse = false;\r\n    }\r\n\r\n    /** set state rather than toggle to support triggers sharing a popover */\r\n    private _setIsPopoverOpen(isOpen: boolean): void {\r\n        this._popoverOpen = isOpen;\r\n        this._popoverOpen ? this.opened.emit() : this.closed.emit();\r\n    }\r\n\r\n    /**\r\n    *  This method checks that a valid instance of MdPopover has been passed into\r\n    *  mdPopoverTriggerFor. If not, an exception is thrown.\r\n    */\r\n    private _checkPopover() {\r\n        if (!this.popover) {\r\n          throwMdePopoverMissingError();\r\n        }\r\n    }\r\n\r\n    /**\r\n    *  This method creates the overlay from the provided popover's template and saves its\r\n    *  OverlayRef so that it can be attached to the DOM when openPopover is called.\r\n    */\r\n    private _createOverlay(): OverlayRef {\r\n        if (!this._overlayRef) {\r\n          this._portal = new TemplatePortal(this.popover.templateRef, this._viewContainerRef);\r\n          const config = this._getOverlayConfig();\r\n          this._subscribeToPositions(config.positionStrategy as FlexibleConnectedPositionStrategy);\r\n          this._overlayRef = this._overlay.create(config);\r\n        }\r\n\r\n        return this._overlayRef;\r\n    }\r\n\r\n    /**\r\n    * This method builds the configuration object needed to create the overlay, the OverlayConfig.\r\n    * @returns OverlayConfig\r\n    */\r\n    private _getOverlayConfig(): OverlayConfig {\r\n        const overlayState = new OverlayConfig();\r\n        overlayState.positionStrategy = this._getPosition();\r\n\r\n        /** Display overlay backdrop if trigger event is click */\r\n        if (this.triggerEvent === 'click') {\r\n          overlayState.hasBackdrop = true;\r\n          overlayState.backdropClass = 'cdk-overlay-transparent-backdrop';\r\n        }\r\n\r\n        overlayState.direction = this.dir;\r\n        overlayState.scrollStrategy = this._overlay.scrollStrategies.reposition();\r\n        return overlayState;\r\n    }\r\n\r\n    /**\r\n    * Listens to changes in the position of the overlay and sets the correct classes\r\n    * on the popover based on the new position. This ensures the animation origin is always\r\n    * correct, even if a fallback position is used for the overlay.\r\n    */\r\n    private _subscribeToPositions(position: FlexibleConnectedPositionStrategy): void {\r\n        this._positionSubscription = position.positionChanges.subscribe(change => {\r\n            const posisionX: MdePopoverPositionX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\r\n            let posisionY: MdePopoverPositionY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\r\n\r\n            if (!this.popover.overlapTrigger) {\r\n                posisionY = posisionY === 'below' ? 'above' : 'below';\r\n            }\r\n\r\n            this.popover.positionX = posisionX;\r\n            this.popover.positionY = posisionY;\r\n            this.popover.setCurrentStyles();\r\n\r\n            this.popover.setPositionClasses(posisionX, posisionY);\r\n        });\r\n    }\r\n\r\n    /**\r\n    * This method builds the position strategy for the overlay, so the popover is properly connected\r\n    * to the trigger.\r\n    * @returns ConnectedPositionStrategy\r\n    */\r\n    private _getPosition(): FlexibleConnectedPositionStrategy {\r\n        const [originX, originFallbackX]: HorizontalConnectionPos[] =\r\n          this.popover.positionX === 'before' ? ['end', 'start'] : ['start', 'end'];\r\n\r\n        const [overlayY, overlayFallbackY]: VerticalConnectionPos[] =\r\n          this.popover.positionY === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\r\n\r\n        // let originY = overlayY;\r\n        // let fallbackOriginY = overlayFallbackY;\r\n\r\n        let originY = overlayY;\r\n        let originFallbackY = overlayFallbackY;\r\n\r\n        const overlayX = originX;\r\n        const overlayFallbackX = originFallbackX;\r\n\r\n        // let [originY, originFallbackY] = [overlayY, overlayFallbackY];\r\n        // let [overlayX, overlayFallbackX] = [originX, originFallbackX];\r\n\r\n        /** Reverse overlayY and fallbackOverlayY when overlapTrigger is false */\r\n        if (!this.popover.overlapTrigger) {\r\n          originY = overlayY === 'top' ? 'bottom' : 'top';\r\n          originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\r\n        }\r\n\r\n        let offsetX = 0;\r\n        let offsetY = 0;\r\n\r\n        if (this.popover.targetOffsetX && !isNaN(Number(this.popover.targetOffsetX))) {\r\n          offsetX = Number(this.popover.targetOffsetX);\r\n          // offsetX = -16;\r\n        }\r\n\r\n        if (this.popover.targetOffsetY && !isNaN(Number(this.popover.targetOffsetY))) {\r\n          offsetY = Number(this.popover.targetOffsetY);\r\n          // offsetY = -10;\r\n        }\r\n\r\n        /**\r\n         * For overriding position element, when mdePopoverTargetAt has a valid element reference.\r\n         * Useful for sticking popover to parent element and offsetting arrow to trigger element.\r\n         * If undefined defaults to the trigger element reference.\r\n         */\r\n        let element = this._elementRef;\r\n        if (typeof this.targetElement !== 'undefined') {\r\n            this.popover.containerPositioning = true;\r\n            element = this.targetElement._elementRef;\r\n        }\r\n\r\n        return this._overlay.position()\r\n        .flexibleConnectedTo(element)\r\n        .withPositions([\r\n          {\r\n              originX,\r\n              originY,\r\n              overlayX,\r\n              overlayY,\r\n              offsetY\r\n          },\r\n          {\r\n              originX: originFallbackX,\r\n              originY,\r\n              overlayX: overlayFallbackX,\r\n              overlayY,\r\n              offsetY\r\n          },\r\n          {\r\n            originX,\r\n            originY: originFallbackY,\r\n            overlayX,\r\n            overlayY: overlayFallbackY,\r\n            offsetY: -offsetY\r\n          },\r\n          {\r\n            originX: originFallbackX,\r\n            originY: originFallbackY,\r\n            overlayX: overlayFallbackX,\r\n            overlayY: overlayFallbackY,\r\n            offsetY: -offsetY\r\n          }\r\n        ])\r\n        .withDefaultOffsetX(offsetX)\r\n        .withDefaultOffsetY(offsetY);\r\n        /*\r\n        return this._overlay.position()\r\n          .connectedTo(element,\r\n              {originX: posX, originY: originY},\r\n              {overlayX: posX, overlayY: overlayY})\r\n          .withFallbackPosition(\r\n              {originX: fallbackX, originY: originY},\r\n              {overlayX: fallbackX, overlayY: overlayY})\r\n          .withFallbackPosition(\r\n              {originX: posX, originY: fallbackOriginY},\r\n              {overlayX: posX, overlayY: fallbackOverlayY})\r\n          .withFallbackPosition(\r\n              {originX: fallbackX, originY: fallbackOriginY},\r\n              {overlayX: fallbackX, overlayY: fallbackOverlayY})\r\n          .withOffsetX(offsetX)\r\n          .withOffsetY(offsetY);\r\n          */\r\n    }\r\n\r\n    private _cleanUpSubscriptions(): void {\r\n        if (this._backdropSubscription) {\r\n            this._backdropSubscription.unsubscribe();\r\n        }\r\n        if (this._positionSubscription) {\r\n            this._positionSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    @HostListener('mousedown') _handleMousedown(event: MouseEvent): void {\r\n        if (event && !isFakeMousedownFromScreenReader(event)) {\r\n            this._openedByMouse = true;\r\n        }\r\n    }\r\n}\r\n","import { Directive, ElementRef } from '@angular/core';\r\n\r\n\r\n@Directive({\r\n  selector: 'mde-popover-target, [mdePopoverTarget]',\r\n  exportAs: 'mdePopoverTarget'\r\n})\r\nexport class MdePopoverTarget { // tslint:disable-line:directive-class-suffix\r\n\r\n  constructor(public _elementRef: ElementRef) { }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\n\r\nimport { MdePopover } from './popover';\r\nimport { MdePopoverTrigger } from './popover-trigger';\r\nimport { MdePopoverTarget } from './popover-target';\r\n\r\n@NgModule({\r\n  imports: [\r\n    OverlayModule,\r\n    CommonModule\r\n  ],\r\n  exports: [MdePopover, MdePopoverTrigger, MdePopoverTarget],\r\n  declarations: [MdePopover, MdePopoverTrigger, MdePopoverTarget],\r\n})\r\nexport class MdePopoverModule {}\r\n"],"names":["trigger","state","style","transition","animate","EventEmitter","ESCAPE","Component","ChangeDetectionStrategy","ViewEncapsulation","ElementRef","HostBinding","Input","Output","ViewChild","TemplateRef","TemplatePortal","OverlayConfig","isFakeMousedownFromScreenReader","Directive","Overlay","ViewContainerRef","Directionality","Optional","HostListener","NgModule","OverlayModule","CommonModule"],"mappings":"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"}
